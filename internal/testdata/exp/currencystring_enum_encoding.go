// Code generated by go-enum-encoding DO NOT EDIT.

package color

import "errors"

var ErrUnknownCurrencyString = errors.New("unknown CurrencyString")

var value_to_bytes_CurrencyString = map[CurrencyString][]byte{
	UndefinedCurrencyS: []byte(""),
	SGDS:               []byte("SGD"),
	USDS:               []byte("USD"),
	GBPS:               []byte("GBP"),
	KRWS:               []byte("KRW"),
	HKDS:               []byte("HKD"),
	JPYS:               []byte("JPY"),
	MYRS:               []byte("MYR"),
	BHTS:               []byte("BHT"),
	THCS:               []byte("THC"),
	CBDS:               []byte("CBD"),
	XYZS:               []byte("XYZ"),
}

var string_to_value_CurrencyString = map[string]CurrencyString{
	"":    UndefinedCurrencyS,
	"SGD": SGDS,
	"USD": USDS,
	"GBP": GBPS,
	"KRW": KRWS,
	"HKD": HKDS,
	"JPY": JPYS,
	"MYR": MYRS,
	"BHT": BHTS,
	"THC": THCS,
	"CBD": CBDS,
	"XYZ": XYZS,
}

func (s *CurrencyString) UnmarshalText(text []byte) error {
	var ok bool
	if *s, ok = string_to_value_CurrencyString[string(text)]; !ok {
		return ErrUnknownCurrencyString
	}
	return nil
}

func (s CurrencyString) MarshalText() ([]byte, error) { return value_to_bytes_CurrencyString[s], nil }

var value_to_string_CurrencyString = map[CurrencyString]string{
	UndefinedCurrencyS: "",
	SGDS:               "SGD",
	USDS:               "USD",
	GBPS:               "GBP",
	KRWS:               "KRW",
	HKDS:               "HKD",
	JPYS:               "JPY",
	MYRS:               "MYR",
	BHTS:               "BHT",
	THCS:               "THC",
	CBDS:               "CBD",
	XYZS:               "XYZ",
}

func (s CurrencyString) String() string { return value_to_string_CurrencyString[s] }
